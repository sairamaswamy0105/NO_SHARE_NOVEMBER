// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shab.Infrastructure.Data;

#nullable disable

namespace Shab.Infrastructure.Migrations
{
    [DbContext(typeof(ShabDbContext))]
    partial class ShabDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Shab.Domain.Entities.RoleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("Shab.Domain.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("de-CH");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pincode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TwoFactorSecretKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserImage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Kakinada",
                            CreateDate = new DateTime(2024, 11, 20, 12, 1, 48, 697, DateTimeKind.Local).AddTicks(8754),
                            FirstName = "Sai",
                            Language = "de-CH",
                            LastName = "Ram",
                            Mail = "sairamswamy0105@gmail.com",
                            PasswordResetToken = "cb247ba9-bcb1-46b8-b158-215f7ced7508",
                            Phone_Number = "+917569373620",
                            Pincode = "533016",
                            RoleId = 2,
                            Street = "Market Road"
                        },
                        new
                        {
                            Id = 2,
                            City = "Visakhapatnam",
                            CreateDate = new DateTime(2024, 11, 20, 12, 1, 48, 697, DateTimeKind.Local).AddTicks(8815),
                            FirstName = "Muka",
                            Language = "de-CH",
                            LastName = "Ambika",
                            Mail = "mukaambika@gmail.com",
                            PasswordResetToken = "7041baf4-e63b-4ee8-99bb-35e24f9b02b6",
                            Phone_Number = "+918897070200",
                            Pincode = "533048",
                            RoleId = 2,
                            Street = "Burma Colony"
                        },
                        new
                        {
                            Id = 3,
                            City = "Blore",
                            CreateDate = new DateTime(2024, 11, 20, 12, 1, 48, 697, DateTimeKind.Local).AddTicks(8821),
                            FirstName = "Kartik",
                            Language = "de-CH",
                            LastName = "Kanchi",
                            Mail = "skram0905@gmail.com",
                            PasswordResetToken = "c59e5e87-596c-4927-b0e7-c41f10d5efee",
                            Phone_Number = "+918897070200",
                            Pincode = "533048",
                            RoleId = 2,
                            Street = " RTC Complex"
                        });
                });

            modelBuilder.Entity("Shab.Domain.Entities.UserEntity", b =>
                {
                    b.HasOne("Shab.Domain.Entities.RoleEntity", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
